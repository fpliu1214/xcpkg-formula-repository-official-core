pkgtype: lib
summary: Cartographic Projections Library
web-url: https://proj.org/
git-url: https://github.com/OSGeo/PROJ
src-url: https://github.com/OSGeo/PROJ/releases/download/7.2.1/proj-7.2.1.tar.gz
src-sha: b384f42e5fb9c6d01fe5fa4d31da2e91329668863a684f97be5d4760dbbf0a14
license: MIT
dep-upp: sqlite3
dep-pkg: libsqlite3 libtiff libcurl

dopatch: |
    # https://cmake.org/cmake/help/latest/module/FindCURL.html
    printf '%s\n' '
    if (CURL_INCLUDE_DIRS AND CURL_LIBRARIES)
        set(CURL_FOUND TRUE)
    else()
        pkg_check_modules(PKG_CONFIG_CURL QUIET libcurl)

        message("PKG_CONFIG_CURL_FOUND=${PKG_CONFIG_CURL_FOUND}")
        message("PKG_CONFIG_CURL_INCLUDE_DIRS=${PKG_CONFIG_CURL_INCLUDE_DIRS}")
        message("PKG_CONFIG_CURL_LIBRARY_DIRS=${PKG_CONFIG_CURL_LIBRARY_DIRS}")
        message("PKG_CONFIG_CURL_INCLUDEDIR=${PKG_CONFIG_CURL_INCLUDEDIR}")
        message("PKG_CONFIG_CURL_LIBDIR=${PKG_CONFIG_CURL_LIBDIR}")
        message("PKG_CONFIG_CURL_VERSION=${PKG_CONFIG_CURL_VERSION}")
        message("PKG_CONFIG_CURL_LIBRARIES=${PKG_CONFIG_CURL_LIBRARIES}")
        message("PKG_CONFIG_CURL_LINK_LIBRARIES=${PKG_CONFIG_CURL_LINK_LIBRARIES}")

        if (PKG_CONFIG_CURL_FOUND)
            if (PKG_CONFIG_CURL_INCLUDE_DIRS)
                set(CURL_INCLUDE_DIRS "${PKG_CONFIG_CURL_INCLUDE_DIRS}")
            elseif (PKG_CONFIG_CURL_INCLUDEDIR)
                set(CURL_INCLUDE_DIRS "${PKG_CONFIG_CURL_INCLUDEDIR}")
            else()
                find_path(CURL_INCLUDE_DIRS curl/curl.h)
            endif()

            # https://sourceware.org/bugzilla/show_bug.cgi?id=21264

            set(CURL_LIBRARIES )

            foreach(item ${PKG_CONFIG_CURL_LINK_LIBRARIES})
                    if(item MATCHES "/.*libm\\.(a|so|dylib)")
                    list(APPEND CURL_LIBRARIES "-lm")
                elseif(item MATCHES "/.*libdl\\.(a|so|dylib)")
                    list(APPEND CURL_LIBRARIES "-ldl")
                elseif(item MATCHES "/.*librt\\.(a|so|dylib)")
                    list(APPEND CURL_LIBRARIES "-lrt")
                elseif(item MATCHES "/.*libpthread\\.(a|so|dylib)")
                    list(APPEND CURL_LIBRARIES "-lpthread")
                elseif(item MATCHES "/.*\\.framework")
                    get_filename_component(LIBRARY_FILENAME_PREFIX ${item} NAME_WLE)
                    message(STATUS "${LIBRARY_FILENAME_PREFIX}")
                    list(APPEND CURL_LIBRARIES "-framework ${LIBRARY_FILENAME_PREFIX}")
                elseif(item MATCHES "-framework .*")
                    list(APPEND CURL_LIBRARIES "${item}")
                elseif(item MATCHES "/.*")
                    get_filename_component(LIBRARY_FILENAME ${item} NAME)

                    message(STATUS "${LIBRARY_FILENAME}")

                    if (NOT TARGET  CURL::${LIBRARY_FILENAME})
                        add_library(CURL::${LIBRARY_FILENAME} UNKNOWN IMPORTED)
                        set_target_properties(CURL::${LIBRARY_FILENAME} PROPERTIES IMPORTED_LOCATION "${item}")
                    endif()

                    list(APPEND CURL_LIBRARIES CURL::${LIBRARY_FILENAME})
                endif()
            endforeach()

            if (NOT TARGET  CURL::libcurl)
                add_library(CURL::libcurl INTERFACE IMPORTED)
                set_target_properties(CURL::libcurl PROPERTIES
                    INTERFACE_INCLUDE_DIRECTORIES "${CURL_INCLUDE_DIRS}"
                    INTERFACE_LINK_LIBRARIES      "${CURL_LIBRARIES}"
                )
            endif()

            if (PKG_CONFIG_CURL_VERSION)
                set(CURL_VERSION_STRING ${PKG_CONFIG_CURL_VERSION})
            endif()
        endif()
    endif()

    include(FindPackageHandleStandardArgs)
    find_package_handle_standard_args(CURL REQUIRED_VARS CURL_LIBRARIES CURL_INCLUDE_DIRS VERSION_VAR CURL_VERSION)

    mark_as_advanced(CURL_INCLUDE_DIRS CURL_LIBRARIES)
    ' > cmake/FindCURL.cmake

    # https://cmake.org/cmake/help/latest/module/FindTIFF.html
    cat > cmake/FindTIFF.cmake <<EOF
    if (TIFF_INCLUDE_DIRS AND TIFF_LIBRARIES)
        set(TIFF_FOUND TRUE)
    else()
        include(FindPkgConfig)
        pkg_check_modules(PKG_CONFIG_TIFF QUIET libtiff-4)

        if (PKG_CONFIG_TIFF_FOUND)
            if (PKG_CONFIG_TIFF_INCLUDE_DIRS)
                set(TIFF_INCLUDE_DIRS "\${PKG_CONFIG_TIFF_INCLUDE_DIRS}")
            elseif (PKG_CONFIG_TIFF_INCLUDEDIR)
                set(TIFF_INCLUDE_DIRS "\${PKG_CONFIG_TIFF_INCLUDEDIR}")
            else()
                find_path(TIFF_INCLUDE_DIRS tiff.h)
            endif()

            set(TIFF_LIBRARIES )

            foreach(item \${PKG_CONFIG_TIFF_LINK_LIBRARIES})
                # https://sourceware.org/bugzilla/show_bug.cgi?id=21264
                    if(item MATCHES ".*libm\\.a")
                elseif(item MATCHES ".*libpthread\\.a")
                elseif(item MATCHES "/.*")
                    get_filename_component(LIBRARY_FILENAME \${item} NAME)

                    if (NOT TARGET  TIFF::\${LIBRARY_FILENAME})
                        add_library(TIFF::\${LIBRARY_FILENAME} UNKNOWN IMPORTED)
                        set_target_properties(TIFF::\${LIBRARY_FILENAME} PROPERTIES IMPORTED_LOCATION "\${item}")
                    endif()

                    list(APPEND TIFF_LIBRARIES TIFF::\${LIBRARY_FILENAME})
                endif()
            endforeach()

            if (NOT TARGET  TIFF::TIFF)
                add_library(TIFF::TIFF INTERFACE IMPORTED)
                set_target_properties(TIFF::TIFF PROPERTIES
                    INTERFACE_INCLUDE_DIRECTORIES "\${TIFF_INCLUDE_DIRS}"
                    INTERFACE_LINK_LIBRARIES      "\${TIFF_LIBRARIES}"
                )
            endif()

            if (PKG_CONFIG_TIFF_VERSION)
                set(TIFF_VERSION \${PKG_CONFIG_TIFF_VERSION})
            endif()
        endif()
    endif()

    include(FindPackageHandleStandardArgs)
    find_package_handle_standard_args(TIFF REQUIRED_VARS TIFF_LIBRARIES TIFF_INCLUDE_DIRS VERSION_VAR TIFF_VERSION)

    mark_as_advanced(TIFF_INCLUDE_DIRS TIFF_LIBRARIES)
    EOF

    sed_in_place 's|${TIFF_LIBRARY}|TIFF::TIFF|' src/lib_proj.cmake
    sed_in_place 's|${CURL_LIBRARY}|CURL::libcurl|' src/lib_proj.cmake

install: cmakew -DENABLE_TIFF=ON -DENABLE_CURL=ON -DBUILD_TESTING=OFF

dotweak: |
    install -d lib/pkgconfig
    cat >      lib/pkgconfig/proj.pc <<EOF
    prefix=\${pcfiledir}/../..
    libdir=\${prefix}/lib
    includedir=\${prefix}/include
    datarootdir=\${prefix}/share
    datadir=\${datarootdir}/proj

    Name: PROJ
    Description: Coordinate transformation software library
    Version: $PACKAGE_VERSION
    Requires: sqlite3 libtiff-4 libcurl
    Libs: -L\${libdir} -lproj -lc++ -ldl -lm
    Cflags: -I\${includedir}
    EOF
